plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'androidx.navigation.safeargs'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.damar.jetpacksubmission"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunner "com.damar.jetpacksubmission.ui.HiltTestRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
                arguments["room.incremental"] = "true"
            }
        }
    }
    testOptions {
        testOptions {
            unitTests.includeAndroidResources = true
            unitTests.returnDefaultValues = true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures{
        viewBinding true
    }
    configurations.all{
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:3.0.0'
    }
}

dependencies {

    //kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$coreVersion"

    //ui
    def legacyVersion = "1.0.0"
    def fragmentKtx = "1.3.0"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacyVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtx"

    //testing
    def testCoreVersion = "1.3.0"
    def mockitoVersion = "3.2.4"
    def archCoreVersion = "2.1.0"
    def kotlinxCoroutine = "1.4.2"
    def kotlinxMockito = "2.0.0"
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$androidTestVersion"
    androidTestImplementation "androidx.test:rules:$androidTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitExtversion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$kotlinxCoroutine"
    testImplementation "androidx.arch.core:core-testing:$archCoreVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$kotlinxMockito"
    testImplementation 'app.cash.turbine:turbine:0.4.0'

    //Testing Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
    implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

    //Testing Mockk io
    def mockkVersion = "1.10.5"
    testImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"

    // Glide Image Loading
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    //JSON Parser
    implementation "com.squareup.moshi:moshi:$moshiVersion"
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofitVersion"

    //Lottiee
    implementation "com.airbnb.android:lottie:$lottieVersion"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Hilt -- DI
    def hilt_version = "2.32-alpha"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0-alpha03'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"

    // For instrumentation tests
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // For local unit tests
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version"

    // Paging Libray
    def paging_version = "3.0.0-beta01"
    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
    testImplementation "androidx.paging:paging-common-ktx:$paging_version"
}
kapt {
    correctErrorTypes true
}